setwd("C:/Users/Park/namda_git/Datamining/term-project")
ffire <- read.csv(file = 'forestfires.csv', header = T, stringsAsFactors = F )
head(ffire)
sum(is.na(ffire))
str(ffire)
fire_monthzz = table(ffire$month)
#Monthly frequency
forest_fires <- forest_fires %>% mutate(month = factor(month,
levels = c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")))
fire_month <- ffire %>% group_by(month) %>%
summarize(total_fires = n())
#Monthly frequency
forest_fires <- ffire %>% mutate(month = factor(month,
levels = c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")))
fire_month <- ffire %>% group_by(month) %>%
summarize(total_fires = n())
ggplot(data = fire_month) +
aes(x = month, y = total_fires) +
geom_bar(stat = "identity")  +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_line(size = 0.25, colour = "black"))
#Monthly frequency
ffire <- ffire %>% mutate(month = factor(month,
levels = c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")))
fire_month <- ffire %>% group_by(month) %>%
summarize(total_fires = n())
ggplot(data = fire_month) +
aes(x = month, y = total_fires) +
geom_bar(stat = "identity")  +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_line(size = 0.25, colour = "black"))
create_boxplots <- function(x, y) {
ggplot(data = ffire) +
aes_string(x = x, y = y) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "white"))
}
## Assign x and y variable names
x_var_month <- names(forest_fires)[3] ## month
x_var_day <- names(forest_fires)[4] ## day
y_var <- names(forest_fires)[5:12]
## use the map() function to apply the function to the variables of interest
month_box <- map2(x_var_month, y_var, create_boxplots) ## visualize variables by month
day_box <- map2(x_var_day, y_var, create_boxplots) ## visualize variables by day
library(readr)
library(dplyr)
library(ggplot2)
library(purrr)
ffire <- ffire %>% mutate(month = factor(month,
levels = c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")))
fire_month <- ffire %>% group_by(month) %>%
summarize(total_fires = n())
ggplot(data = fire_month) +
aes(x = month, y = total_fires) +
geom_bar(stat = "identity")  +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_line(size = 0.25, colour = "black"))
create_boxplots <- function(x, y) {
ggplot(data = ffire) +
aes_string(x = x, y = y) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "white"))
}
## Assign x and y variable names
x_var_month <- names(forest_fires)[3] ## month
x_var_day <- names(forest_fires)[4] ## day
y_var <- names(forest_fires)[5:12]
## use the map() function to apply the function to the variables of interest
month_box <- map2(x_var_month, y_var, create_boxplots) ## visualize variables by month
day_box <- map2(x_var_day, y_var, create_boxplots) ## visualize variables by day
create_boxplots <- function(x, y) {
ggplot(data = ffire) +
aes_string(x = x, y = y) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "white"))
}
## Assign x and y variable names
x_var_month <- names(forest_fires)[3] ## month
x_var_day <- names(forest_fires)[4] ## day
y_var <- names(forest_fires)[5:12]
## use the map() function to apply the function to the variables of interest
month_box <- map2(x_var_month, y_var, create_boxplots) ## visualize variables by month
day_box <- map2(x_var_day, y_var, create_boxplots) ## visualize variables by day
## use the map() function to apply the function to the variables of interest
month_box <- map2(x_var_month, y_var, create_boxplots) ## visualize variables by month
month_box
day)box
day_box
day_box[1]
day_box[2]
day_box[3]
View(day_box)
day_box[[6]]
create_boxplots(1)
x_month <- names(ffire)[3]
y_attribute <- names(ffire)[5:12]
create_boxplots(x_month, y_attribute)
create_boxplots(x_month, y_attribute[1])
create_boxplots(x_month, y_attribute[0])
create_boxplots(x_month, y_attribute[1])
box_month <- map2(x_month, y_atrribute, create_boxplots)
box_month <- map2(x_month, y_attribute, create_boxplots)
library(readr)
library(dplyr)
library(ggplot2)
library(purrr)
setwd("C:/Users/Park/namda_git/Datamining/term-project")
ffire <- read.csv(file = 'forestfires.csv', header = T, stringsAsFactors = F )
head(ffire)
sum(is.na(ffire))
str(ffire)
fire_monthzz = table(ffire$month)
#Monthly frequency
ffire <- ffire %>% mutate(month = factor(month,
levels = c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")))
fire_month <- ffire %>% group_by(month) %>%
summarize(total_fires = n())
ggplot(data = fire_month) +
aes(x = month, y = total_fires) +
geom_bar(stat = "identity")  +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_line(size = 0.25, colour = "black"))
#Monthly attribute
create_boxplots <- function(x, y) {
ggplot(data = ffire) +
aes_string(x = x, y = y) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "white"))
}
x_month <- names(ffire)[3]
y_attribute <- names(ffire)[5:12]
box_month <- map2(x_month, y_attribute, create_boxplots)
create_scatterplots = function(x, y) {
ggplot(data = forest_fires) +
aes_string(x = x, y = y) +
geom_point() +
theme(panel.background = element_rect(fill = "white"))
}
x_var_scatter <- names(forest_fires)[5:12]
y_var_scatter <- names(forest_fires)[13]
scatters <- map2(x_var_scatter, y_var_scatter, create_scatterplots)
y_box_attr <- names(ffire)[5:12]
x_scatter <- names(ffire)[5:12]
y_area <- names(ffire)[13]
scatters <- map2(x_scatter, y_area, create_scatterplots)
create_scatterplots = function(x, y) {
ggplot(data = ffire) +
aes_string(x = x, y = y) +
geom_point() +
theme(panel.background = element_rect(fill = "white"))
}
x_scatter <- names(ffire)[5:12]
y_area <- names(ffire)[13]
scatters <- map2(x_scatter, y_area, create_scatterplots)
scatters
create_scatterplots = function(x, y) {
ggplot(data = ffire) +
aes_string(x = x, y = y) +
geom_point() +
geom_smooth() +
theme(panel.background = element_rect(fill = "white"))
}
x_scatter <- names(ffire)[5:12]
y_area <- names(ffire)[13]
scatters <- map2(x_scatter, y_area, create_scatterplots)
scatters
#Monthly frequency
ffire <- ffire %>% mutate(month = factor(month,
levels = c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")))
fire_month <- ffire %>% group_by(month) %>%
summarize(total_fires = n())
ggplot(data = fire_month) +
aes(x = month, y = total_fires) +
geom_bar(stat = "identity")  +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_line(size = 0.25, colour = "black"))
install.packages(c("dplyr", "ggplot2", "purrr", "readr"))
sum(duplicate(ffire))
sum(duplicated(ffire))
sum(duplicated(ffire))
# Duplicate Data
sum(duplicated(ffire))
# Duplicate Data
sum(duplicated(ffire)) #4개의 data가 중복이 된다.
ffire <- unique(ffire)
# Duplicate Data
sum(duplicated(ffire)) #4개의 data가 중복이 된다.
head(ffire)
str(ffire)
#PCA
dt <- ffire[, -(2,3)]
#PCA
dt <- ffire[, -2,-3]
#PCA
dt <- ffire[, -2]
str(dt)
#PCA
dt <- ffire[, c(-2,3)]
str(dt)
#PCA
dt <- ffire[, c(-2,3)]
#PCA
dt <- ffire[, c(-2,-3)]
str(dt)
#PCA
dt <- ffire[, c(-3,-4)]
str(dt)
pca_dt <- procomp(dt, center = T, scale. = T)
pca_dt <- prcomp(dt, center = T, scale. = T)
pca_dt
summary(pca_dt)
install.packages("devtools")
install_github("ggbiplot", "vqv")
install_github("ggbiplot", "vqv")
library(devtools)
install_github("ggbiplot", "vqv")
install_github("ggbiplot", "vqv")
install_github("ggbiplot", "vqv")
install_github("vqv/ggbiplot")
g <- ggbiplot(pca_dt, choices = c(1, 2), obs.scale = 1, var.scale = 1, groups = dt_group, ellipse = TRUE, circle = TRUE) g <- g + scale_color_discrete(name = '') g <- g + theme(legend.direction = 'horizontal', legend.position = 'top') print(g)
g <- ggbiplot(pca_dt, choices = c(1, 2), obs.scale = 1, var.scale = 1, groups = dt_group, ellipse = TRUE, circle = TRUE) g <- g + scale_color_discrete(name = '') g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
library(ggbiplot)
g <- ggbiplot(pca_dt, choices = c(1, 2), obs.scale = 1, var.scale = 1, groups = dt_group, ellipse = TRUE, circle = TRUE) g <- g + scale_color_discrete(name = '') g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
g <- ggbiplot(pca_dt, choices = c(1, 2), obs.scale = 1, var.scale = 1, groups = dt_group, ellipse = TRUE, circle = TRUE)
dt_group <- ffire[, c(3,4)]
str(dt)
pca_dt <- prcomp(dt, center = T, scale. = T)
pca_dt
summary(pca_dt)
g <- ggbiplot(pca_dt, choices = c(1, 2), obs.scale = 1, var.scale = 1, groups = dt_group, ellipse = TRUE, circle = TRUE)
g <- ggbiplot(pca_dt, choices = 1,2 , obs.scale = 1, var.scale = 1, groups = dt_group, ellipse = TRUE, circle = TRUE)
g <- ggbiplot(pca_dt, choices = 2 , obs.scale = 1, var.scale = 1, groups = dt_group, ellipse = TRUE, circle = TRUE)
g <- ggbiplot(pca_dt, choices = c(1,2) , obs.scale = 1, var.scale = 1, groups = dt_group, ellipse = TRUE, circle = TRUE)
g <- ggbiplot(pca_dt, choices = 1:2 , obs.scale = 1, var.scale = 1, groups = dt_group, ellipse = TRUE, circle = TRUE)
pca_dt <- prcomp(dt, center = T, scale. = T)
pca_dt
plot(pca_dt, type = "l")
summary(pca_dt)
View(dt_group)
library(corrplot)
install.packages("corrplot")
library(corrplot)
#상관관계 분석
corrplot((dt), order = "hclust")
cor(dt)
plot(dt)
g <- ggbiplot(pca_dt, choices = 1:2 , obs.scale = 1, var.scale = 1, groups = dt_group, ellipse = TRUE, circle = TRUE)
colnames(df)
colnames(pca_dt)
colnames(pca_dt) <- paste("var", 1:11, sep="")
g <- ggbiplot(pca_dt, choices = 1:2 , obs.scale = 1, var.scale = 1, groups = dt_group, ellipse = TRUE, circle = TRUE)
colnames(pca_dt) <- paste("var", 1:11, sep="")
summary(pca_dt)
#PCA
dt <- ffire[, c(-1,-2, -3,-4)]
pca_dt <- prcomp(dt, center = T, scale. = T)
pca_dt
plot(pca_dt, type = "l")
summary(pca_dt)
cor(dt)
install.packages("caret")
library(caret)
firedata <- unique(ffire)
값 확인
sum(is.na(firedata))
str(firedata)
# Duplicate Data
sum(duplicated(firedata)) #4개의 data가 중복이 된다.
firedata <- unique(firedata)
#
#Monthly frequency
firedata <- firedata %>% mutate(month = factor(month,
levels = c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")))
fire_month <- firedata %>% group_by(month) %>%
summarize(total_fires = n())
ggplot(data = fire_month) +
aes(x = month, y = total_fires) +
geom_bar(stat = "identity")  +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_line(size = 0.25, colour = "black"))
#Monthly attribute - using boxplot
create_boxplots <- function(x, y) {
ggplot(data = firedata) +
aes_string(x = x, y = y) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "white"))
}
x_month <- names(firedata)[3]
y_box_attr <- names(firedata)[5:12]
box_month <- map2(x_month,y_box_attr, create_boxplots)
#fire area - using scatterplots
create_scatterplots = function(x, y) {
ggplot(data = firedata) +
aes_string(x = x, y = y) +
geom_point() +
geom_smooth() +
theme(panel.background = element_rect(fill = "white"))
}
x_scatter <- names(firedata)[5:12]
y_area <- names(firedata)[13]
scatters <- map2(x_scatter, y_area, create_scatterplots)
scatters
#PCA
dt <- firedata[, c(-1,-2, -3,-4)]
dt_group <- firedata[, c(3,4)]
str(dt)
pca_dt <- prcomp(dt, center = T, scale. = T)
pca_dt
plot(pca_dt, type = "l")
summary(pca_dt)
g <- ggbiplot(pca_dt, choices = 1:2 , obs.scale = 1, var.scale = 1, groups = dt_group, ellipse = TRUE, circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
print(g)
#상관관계 분석
corrplot((dt), order = "hclust")
cor(dt)
#data sampling
data_train <- createDataPartition(y=ff)
#data sampling
data_train <- createDataPartition(y=firedata$area, p=0.7, list = F)
source('C:/Users/Park/namda_git/Datamining/term-project/termproject.R', encoding = 'UTF-8', echo=TRUE)
#data sampling
data_train <- firedata[createDataPartition(y=firedata$area, p=0.7, list = F)]
data_test <- iris[-rn]
#data sampling
rn <- createDataPartition(y=firedata$area, p=0.7, list = F)
data_train <- firedata[rn]
data_test <- iris[-rn]
data_train
scatters
scatters[1]
library(readr)
library(dplyr)
library(ggplot2)
library(purrr)
library(devtools)
library(ggbiplot)
library(corrplot)
library(caret)
setwd("C:/Users/Park/namda_git/Datamining/term-project")
firedata <- read.csv(file = 'forestfires.csv', header = T, stringsAsFactors = F )
#데이터 전처리 + 통계적 분석
head(firedata)
#Na 값 확인
sum(is.na(firedata))
str(firedata)
# Duplicate Data
sum(duplicated(firedata)) #4개의 data가 중복이 된다.
firedata <- unique(firedata)
#
#Monthly frequency
firedata <- firedata %>% mutate(month = factor(month,
levels = c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")))
fire_month <- firedata %>% group_by(month) %>%
summarize(total_fires = n())
ggplot(data = fire_month) +
aes(x = month, y = total_fires) +
geom_bar(stat = "identity")  +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_line(size = 0.25, colour = "black"))
#Monthly attribute - using boxplot
create_boxplots <- function(x, y) {
ggplot(data = firedata) +
aes_string(x = x, y = y) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "white"))
}
x_month <- names(firedata)[3]
y_box_attr <- names(firedata)[5:12]
box_month <- map2(x_month,y_box_attr, create_boxplots)
#fire area - using scatterplots
create_scatterplots = function(x, y) {
ggplot(data = firedata) +
aes_string(x = x, y = y) +
geom_point() +
geom_smooth() +
theme(panel.background = element_rect(fill = "white"))
}
x_scatter <- names(firedata)[5:12]
y_area <- names(firedata)[13]
scatters <- map2(x_scatter, y_area, create_scatterplots)
scatters[1]
#PCA
dt <- firedata[, c(-1,-2, -3,-4)]
dt_group <- firedata[, c(3,4)]
str(dt)
pca_dt <- prcomp(dt, center = T, scale. = T)
pca_dt
plot(pca_dt, type = "l")
summary(pca_dt)
g <- ggbiplot(pca_dt, choices = 1:2 , obs.scale = 1, var.scale = 1, groups = dt_group, ellipse = TRUE, circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
print(g)
#상관관계 분석
corrplot((dt), order = "hclust")
cor(dt)
#data sampling
rn <- createDataPartition(y=firedata$area, p=0.7, list = F)
data_train <- firedata[rn]
data_test <- iris[-rn]
data_train
library(readr)
library(dplyr)
library(ggplot2)
library(purrr)
library(devtools)
library(ggbiplot)
library(corrplot)
library(caret)
setwd("C:/Users/Park/namda_git/Datamining/term-project")
firedata <- read.csv(file = 'forestfires.csv', header = T, stringsAsFactors = F )
#데이터 전처리 + 통계적 분석
head(firedata)
#Na 값 확인
sum(is.na(firedata))
str(firedata)
# Duplicate Data
sum(duplicated(firedata)) #4개의 data가 중복이 된다.
firedata <- unique(firedata)
setwd("C:/Users/Park/namda_git/Datamining/term-project")
firedata <- read.csv(file = 'forestfires.csv', header = T, stringsAsFactors = F )
setwd("C:/Users/Park/namda_git/Datamining/term-project")4
firedata <- read.csv(file = 'forestfires.csv', header = T, stringsAsFactors = F )
setwd("C:/Users/Park/namda_git/Datamining/term-project")
firedata <- read.csv(file = 'forestfires.csv', header = T, stringsAsFactors = F )
head(firedata)
#Na 값 확인
sum(is.na(firedata))
str(firedata)
# Duplicate Data
sum(duplicated(firedata)) #4개의 data가 중복이 된다.
firedata <- unique(firedata)
#Monthly frequency
firedata <- firedata %>% mutate(month = factor(month,
levels = c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")))
fire_month <- firedata %>% group_by(month) %>%
summarize(total_fires = n())
ggplot(data = fire_month) +
aes(x = month, y = total_fires) +
geom_bar(stat = "identity")  +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_line(size = 0.25, colour = "black"))
create_boxplots <- function(x, y) {
ggplot(data = firedata) +
aes_string(x = x, y = y) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "white"))
}
x_month <- names(firedata)[3]
y_box_attr <- names(firedata)[5:12]
box_month <- map2(x_month,y_box_attr, create_boxplots)
create_scatterplots = function(x, y) {
ggplot(data = firedata) +
aes_string(x = x, y = y) +
geom_point() +
geom_smooth() +
theme(panel.background = element_rect(fill = "white"))
}
x_scatter <- names(firedata)[5:12]
y_area <- names(firedata)[13]
scatters <- map2(x_scatter, y_area, create_scatterplots)
scatters[1]
#PCA
dt <- firedata[, c(-1,-2, -3,-4)]
dt_group <- firedata[, c(3,4)]
str(dt)
pca_dt <- prcomp(dt, center = T, scale. = T)
pca_dt
plot(pca_dt, type = "l")
summary(pca_dt)
g <- ggbiplot(pca_dt, choices = 1:2 , obs.scale = 1, var.scale = 1, groups = dt_group, ellipse = TRUE, circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
print(g)
#상관관계 분석
corrplot((dt), order = "hclust")
cor(dt)
#data sampling
rn <- createDataPartition(y=firedata$area, p=0.7, list = F)
data_train <- firedata[rn]
data_test <- iris[-rn]
data_train
head(firedata)
library(FSelector)
install.packages("FSelector")
(FSelector)
library(FSelector)
install.packages("FSelector")
library(FSelector)
library(FSelector)
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_40")
library(FSelector)
library(FSelector)
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_40")
library(FSelector)
library(FSelector)
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_40")
library(FSelector)
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_40")
library(rjava)
library(rJava)
library(rJava)
library(rJava)
library(FSelector)
source('C:/Users/Park/namda_git/Datamining/term-project/termproject.R', encoding = 'UTF-8', echo=TRUE)
#area 에 연관이 큰 변수 선택
data(Ozone)
#area 에 연관이 큰 변수 선택
data(firedata)
str(firedata)
